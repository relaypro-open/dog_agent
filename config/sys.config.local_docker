[{dog,[{enforcing,true},{use_ipsets,true},{version,"docker_local"}]},
 {kernel,[{inet_dist_use_interface,{127,0,0,1}}]},
 {lager,
     [{handlers,
          [{lager_console_backend,[{level,info}]},
           {lager_file_backend,
               [{file,"/var/log/dog/error.log"},{level,error}]},
           {lager_file_backend,
               [{file,"/var/log/dog/console.log"},{level,info}]}]},
      {crash_log,"/var/log/dog/crash.log"},
      {tracefiles,[]},
      {async_threshold,10000},
      {sieve_threshold,5000},
      {sieve_window,100},
      {colored,true}]},
 {sync,
     [{growl,none},
      {log,[all]},
      {non_descendants,fix},
      {executable,auto},
      {whitelisted_modules,[]},
      {excluded_modules,[]}]},
    {turtle, [
        {connection_config, [
            #{
                conn_name => default,

                username => "guest",
                password => "guest",
                virtual_host => "dog",
                deadline => 300000,
                connections => [
                    {main, [
                      {"rabbitmq", 5672 } 
                    ]}
                ]
            }
        ]}
    ]},
 {thumper,
     [{substitution_rules,
          [{fqdn,{dog_interfaces,fqdn,[]}},
           {environment,{dog_config,environment,[]}},
           {location,{dog_config,location,[]}},
           {group,{dog_config,group,[]}},
           {hostkey,{dog_config,hostkey,[]}}]},
      {thumper_svrs,[default,publish]},
      {brokers,
          [{default,
               [{rabbitmq_config,
                    [{host,"rabbitmq"},
                     {port,5672},
                     {api_port,15672},
                     {virtual_host,<<"dog">>},
                     {user,<<"guest">>},
                     {password,<<"guest">>},
                     {broker_config,
                         {thumper_tx,
                             {callback,{dog_config,broker_config,[]}}}}]}]},
           {publish,[{rabbitmq_config,default}]}]},
      {queuejournal,
          [{enabled,false},
           {dir,"/opt/dog/queuejournal"},
           {memqueue_max,10000},
           {check_journal,true}]}]}
].
