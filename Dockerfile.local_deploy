#Build stage 0.1
FROM erlang:24 as base

ENV DOG_AGENT_VERSION=local_docker
ENV DOG_AGENT_BROKER_USERNAME=guest
ENV DOG_AGENT_BROKER_PASSWORD=guest
ENV DOG_AGENT_BROKER_VIRTUAL_HOST=dog
ENV DOG_AGENT_BROKER_HOST=rabbitmq
ENV DOG_AGENT_BROKER_PORT=5673
ENV DOG_AGENT_CACERTFILE=/etc/dog/certs/ca.crt
ENV DOG_AGENT_CERTFILE=/etc/dog/certs/server.crt
ENV DOG_AGENT_KEYFILE=/etc/dog/private/server.key

RUN apt-get update &&  apt-get install -y libcap-dev iptables ipset less ack lsb-release vim jq curl dnsutils ncat

#Set working directory
RUN mkdir /data
WORKDIR /data
COPY rebar.config rebar.config
COPY rebar.lock .
COPY rebar3 .
RUN ./rebar3 as local_deploy get-deps
RUN ./rebar3 as local_deploy compile

FROM base as compile

WORKDIR /data
COPY *.sh .
COPY src src
COPY include include
COPY --from=base /data/_build .
COPY config/sys.config.src config/sys.config.src

RUN ./rebar3 --version

#Build the release
RUN ./rebar3 as local_docker release 

FROM base as deploy

RUN mkdir -p /opt/dog
RUN mkdir -p /etc/dog
RUN mkdir -p /etc/iptables
COPY config/config.json.local_docker /etc/dog/config.json
RUN mkdir -p /var/log/dog
# Install the released application
COPY --from=compile /data/_build/local_docker/rel/dog /opt/dog
RUN ls /opt/dog/lib
RUN chmod 4555 /opt/dog/lib/erlexec-*/priv/x86_64-pc-linux-gnu/exec-port
RUN mkdir -p /home/dog/bin
RUN cp /usr/sbin/ipset /home/dog/bin/ipset
RUN cp /usr/sbin/iptables-save /home/dog/bin/
RUN cp /usr/sbin/ip6tables-save /home/dog/bin/
RUN cp /usr/sbin/iptables-restore /home/dog/bin/
RUN cp /usr/sbin/ip6tables-restore /home/dog/bin/

RUN ls -latr /opt/dog

RUN mkdir /etc/rabbitmq
COPY csc_certs.sh /etc/rabbitmq/ 

RUN mkdir -p /etc/dog/certs \
	&& mkdir -p /etc/dog/private \
	&& chmod 700 /etc/dog/private
RUN tar czf /tmp/dog_agent.tar.gz /opt/dog

FROM scratch AS tar
COPY --from=deploy /tmp/dog_agent.tar.gz / 

FROM deploy as run 
#CMD /bin/bash -c "sed -i 's/hostname/`hostname`/g' /etc/dog/config.json" && /bin/bash -c "/etc/rabbitmq/csc_certs.sh" && /bin/bash -c "/opt/dog/bin/dog foreground"
#CMD /bin/bash -c "/etc/rabbitmq/csc_certs.sh" && /bin/bash -c "sleep infinity"
ARG CERT_SOURCE=none
ENV CERT_SOURCE=$CERT_SOURCE
RUN echo ${CERT_SOURCE}
COPY scripts scripts/
RUN chmod u+x scripts/entrypoint.sh
ENTRYPOINT [ "scripts/entrypoint.sh" ]
