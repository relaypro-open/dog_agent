#!/bin/bash

export ERL_MAX_ETS_TABLES=8192

APPNAME="dog"
export DOG_HOME="/opt/dog"
HOST=`/bin/hostname -s`
ERL=`which erl`
DOG_HOME=/opt/dog
AWK=`which awk`
SED=`which sed`
PF=`which printf`

ERL_VER=`$ERL +V 2>&1 | $AWK '{print $6}' | $SED "s/$($PF '\r')//"`

ERL_LIBS=${ERL_LIBS}:${DOG_HOME}:${DOG_HOME}/deps

export ERL_LIBS=${ERL_LIBS}

ENV_VARS="ERL_MAX_ETS_TABLES 4096"
export ERL_FULLSWEEP_AFTER=0

start() {
   echo "Starting dog"
   NODE="dog@${HOST}"
   $ERL 128 +P 4194304 +A 128 \
       -noinput -detached  \
       -boot $DOG_HOME/priv/dog_${ERL_VER} \
       -env $ENV_VARS \
       -sname $NODE -config ${DOG_HOME}/config/sys.config -s dog_app
}

console() {
   echo "Starting dog in console mode - version ${ERL_VER} ${ERL}"
   NODE="dog@${HOST}"
   ${ERL} 128 +P 4194304 +A 128 \
       -boot ${DOG_HOME}/priv/dog_${ERL_VER} \
       -env ${ENV_VARS} \
       -sname ${NODE} -config ${DOG_HOME}/config/sys.config -s dog_app
}

stop() {
    echo "Stopping dog"
    NODE="dogctl@${HOST}"
    $ERL -noshell \
       -boot ${DOG_HOME}/priv/dog_${ERL_VER} \
       -sname $NODE -s dog_app stop
}

debug() {
    NODE="dogdebug@$HOST"
    $ERL -sname ${NODE} \
        -boot $DOG_HOME/priv/dog_${ERL_VER} \
        -remsh dog@${HOST}
}

rebar_eunit() {
   NODE="dog@${HOST}"
   ERL_FLAGS="-config config/sys.config -sname $NODE" ./rebar3 eunit
}

rebar_shell() {
   NODE="dog@${HOST}"
   ERL_FLAGS="-config config/sys.config -sname $NODE" ./rebar3 shell
}


rebar_auto() {
   NODE="dog@${HOST}"
   ERL_FLAGS="-config config/sys.config -sname $NODE" ./rebar3 auto
}
usage() {
    echo "dog.sh start"
    echo "dog.sh stop"
    echo "dog.sh debug"
    echo "dog.sh console"
    echo "dog.sh rebar_eunit"
    echo "dog.sh rebar_shell"
    echo "dog.sh rebar_auto"
    echo -n
    exit 1
}

if [ $# -eq 1 ] 
then
    case $1 in
        "start" ) start ;;
        "stop"  ) stop ;;
        "debug" ) debug ;;
        "console" ) console ;;
        "rebar_eunit" ) rebar_eunit ;;
        "rebar_shell" ) rebar_shell ;;
        "rebar_auto" ) rebar_auto ;;
        *       ) echo "Invalid command: $1"; usage ;; 
    esac
else 
    usage
fi
